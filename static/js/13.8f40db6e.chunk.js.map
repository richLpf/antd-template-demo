{"version":3,"sources":["components/Chart/antv/index.js","components/Chart/antv/mock.js","components/Chart/antv/Demo.js","pages/chart/antv.js"],"names":["Chart","props","style","options","type","container","useRef","renderOptions","useCallback","smooth","xField","yField","useEffect","current","chatItem","Liquid","Line","render","ref","React","memo","LiquidData","percent","outline","border","distance","wave","length","Demo","height","ChartDemo"],"mappings":"0MAGA,SAASA,EAAMC,GACb,IAAQC,EAAkCD,EAAlCC,MAAOC,EAA2BF,EAA3BE,QAAf,EAA0CF,EAAlBG,YAAxB,MAA+B,OAA/B,EAEMC,EAAYC,mBAEZC,EAAgBC,uBACpB,SAACL,GAAD,oBACEM,QAAQ,EACRC,OAAQ,OACRC,OAAQ,SACLR,KAEL,IAiBF,OAdAS,qBAAU,WACR,GAAIP,EAAUQ,QAAS,CACrB,IAAIC,EAAW,KACf,GACO,WADCV,EAEJU,EAAW,IAAIC,SAAOV,EAAUQ,QAASN,EAAcJ,SAGvDW,EAAW,IAAIE,OAAKX,EAAUQ,QAASN,EAAcJ,IAEzDW,EAASG,YAEV,CAACV,EAAeF,EAAWF,EAASC,IAEhC,qBAAKF,MAAOA,EAAOgB,IAAKb,IASlBc,UAAMC,KAAKpB,GCjBbqB,G,YAAa,CACxBC,QAAS,IACTC,QAAS,CACPC,OAAQ,EACRC,SAAU,GAEZC,KAAM,CACJC,OAAQ,OCfGC,MAZf,WACE,OACE,cAAC,EAAD,CACE1B,MAAO,CACL2B,OAAQ,SAEVzB,KAAK,SACLD,QAASkB,KCCAS,UARf,WACE,OACE,4BACE,cAAC,EAAD","file":"static/js/13.8f40db6e.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useRef } from \"react\";\nimport { Line, Liquid } from \"@antv/g2plot\";\nimport PropTypes from \"prop-types\";\nfunction Chart(props) {\n  const { style, options, type = \"Line\" } = props;\n\n  const container = useRef();\n\n  const renderOptions = useCallback(\n    (options) => ({\n      smooth: true,\n      xField: \"date\",\n      yField: \"value\",\n      ...options,\n    }),\n    []\n  );\n\n  useEffect(() => {\n    if (container.current) {\n      let chatItem = null;\n      switch (type) {\n        case \"Liquid\":\n          chatItem = new Liquid(container.current, renderOptions(options));\n          break;\n        default:\n          chatItem = new Line(container.current, renderOptions(options));\n      }\n      chatItem.render();\n    }\n  }, [renderOptions, container, options, type]);\n\n  return <div style={style} ref={container}></div>;\n}\n\nChart.propTypes = {\n  style: PropTypes.object,\n  options: PropTypes.object,\n  type: PropTypes.string,\n};\n\nexport default React.memo(Chart);\n","import moment from \"moment\";\n\nexport const generateDate = (name, random) => {\n  let result = [];\n  for (let i = 5; i > 0; i--) {\n    let obj = {\n      name: name,\n      date: moment().subtract(i, `days`).format(\"YYYY-MM-DD\"),\n      value: random[i],\n    };\n    result.push(obj);\n  }\n  return result;\n};\n\nexport const generateTwoLine = () => {\n  let random1 = [1, 4, 2, 7, 3, 6];\n  let random2 = [0, 1, 0, 2, 0, 1];\n  return [\n    ...generateDate(\"发送量\", random1),\n    ...generateDate(\"上行量\", random2),\n  ];\n};\n\nexport const LiquidData = {\n  percent: 0.25,\n  outline: {\n    border: 4,\n    distance: 8,\n  },\n  wave: {\n    length: 128,\n  },\n};\n","import React from \"react\";\nimport Chart from \"./index\";\nimport { LiquidData } from \"./mock\";\n\nfunction Demo() {\n  return (\n    <Chart\n      style={{\n        height: \"300px\",\n      }}\n      type=\"Liquid\"\n      options={LiquidData}\n    />\n  );\n}\n\nexport default Demo;\n","import React from \"react\";\nimport { Card } from \"antd\";\nimport Chart from \"../../components/Chart/antv/Demo\";\n\nfunction ChartDemo() {\n  return (\n    <Card>\n      <Chart />\n    </Card>\n  );\n}\n\nexport default ChartDemo;\n"],"sourceRoot":""}